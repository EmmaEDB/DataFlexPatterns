Use DFUnit.pkg
Use cStringMethods.pkg

Object IsNumericType_spec is a cTestFixture
    Object IsNumber_spec is a cTestFixture
        
        Object Common_cases_for_all_functions is a cTestFixture
            Object Empty_string_fails is a cTest
                Procedure Test
                    Send AssertFalse (IsNumber(gcStringMethods, ""))
                    Send AssertFalse (IsInteger(gcStringMethods, ""))
                    Send AssertFalse (IsPositiveOrZeroInteger(gcStringMethods, ""))
                End_Procedure
            End_Object
            Object Positive_integer_passes is a cTest
                Procedure Test
                    Send Assert (IsNumber(gcStringMethods, "873"))
                    Send Assert (IsInteger(gcStringMethods, "873"))
                    Send Assert (IsPositiveOrZeroInteger(gcStringMethods, "873"))
                End_Procedure
            End_Object
            Object Zero_passes is a cTest
                Procedure Test
                    Send Assert (IsNumber(gcStringMethods, "0"))
                    Send Assert (IsInteger(gcStringMethods, "0"))
                    Send Assert (IsPositiveOrZeroInteger(gcStringMethods, "0"))
                End_Procedure
            End_Object
            Object Minus_not_in_first_position_fails is a cTest
                Procedure Test
                    Send AssertFalse (IsNumber(gcStringMethods, "0-23"))
                    Send AssertFalse (IsInteger(gcStringMethods, "0-23"))
                    Send AssertFalse (IsPositiveOrZeroInteger(gcStringMethods, "0-23"))
                End_Procedure
            End_Object
            Object Plus_not_in_first_position_fails is a cTest
                Procedure Test
                    Send AssertFalse (IsNumber(gcStringMethods, "+0++"))
                    Send AssertFalse (IsInteger(gcStringMethods, "+0++"))
                    Send AssertFalse (IsPositiveOrZeroInteger(gcStringMethods, "+0++"))
                End_Procedure
            End_Object
        End_Object
        
        Object Common_cases_for_integer_functions is a cTestFixture
            Object Number_with_decimals_and_thousands_separator_fails is a cTest
                Procedure Test
                    Send AssertFalse (IsInteger(gcStringMethods, "100 000,00"))
                    Send AssertFalse (IsPositiveOrZeroInteger(gcStringMethods, "100 000,00"))
                    Send AssertFalse (IsInteger(gcStringMethods, "3.2"))
                    Send AssertFalse (IsPositiveOrZeroInteger(gcStringMethods, "3.2"))
                End_Procedure
            End_Object
            Object Number_with_decimals_fails is a cTest
                Procedure Test
                    Send AssertFalse (IsInteger(gcStringMethods, "3.2"))
                    Send AssertFalse (IsPositiveOrZeroInteger(gcStringMethods, "3.2"))
                End_Procedure
            End_Object
            Object Negative_number_with_decimals_fails is a cTest
                Procedure Test
                    Send AssertFalse (IsInteger(gcStringMethods, "-123.02"))
                    Send AssertFalse (IsPositiveOrZeroInteger(gcStringMethods, "-123.02"))
                End_Procedure
            End_Object
        End_Object
        
        Object Common_cases_for_non_integer_functions is a cTestFixture
            Object Number_with_decimals_passes is a cTest
                Procedure Test
                    Send Assert (IsNumber(gcStringMethods, "-123.02", "."))
                End_Procedure
            End_Object
            Object Number_with_decimals_and_thousands_separator_passes is a cTest
                Procedure Test
                    Send Assert (IsNumber(gcStringMethods, "100 000,00", ",", " "))
                End_Procedure
            End_Object
            Object Number_with_several_decimal_points_fails is a cTest
                Procedure Test
                    Send AssertFalse (IsNumber(gcStringMethods, "10.10.10", "."))
                End_Procedure
            End_Object
        End_Object
        
        Object Common_cases_for_functions_accepting_negative_values is a cTestFixture
            Object Negative_integer_passes is a cTest
                Procedure Test
                    Send Assert (IsNumber(gcStringMethods, "-12345"))
                    Send Assert (IsInteger(gcStringMethods, "-12345"))
                End_Procedure
            End_Object
        End_Object
        
        Object Common_cases_for_functions_that_accept_positive_values_only is a cTestFixture
            Object Negative_integer_fails is a cTest
                Procedure Test
                    Send AssertFalse (IsPositiveOrZeroInteger(gcStringMethods, "-10"))
                End_Procedure
            End_Object
            Object Negative_number_with_decimals_fails is a cTest
                Procedure Test
                    Send AssertFalse (IsPositiveOrZeroInteger(gcStringMethods, "-3.2"))
                End_Procedure
            End_Object
        End_Object
    End_Object
    
    //Todo: We need to test and implement cases like these:
    //123.123.123
    //+123+123+123
    //-123-123-123
    //1-
    //1+
    //decimal separator can only appear once
    //+ and - can only appear at beginning of string
End_Object